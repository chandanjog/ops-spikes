---
# https://www.digitalocean.com/community/questions/logstash-grok-pattern-for-nginx-log-from-sysylog
# https://www.digitalocean.com/community/tutorials/how-to-map-user-location-with-geoip-and-elk-elasticsearch-logstash-and-kibana
# For cleaning indexes: https://www.elastic.co/guide/en/elasticsearch/client/curator/current/examples.html
# https://galaxy.ansible.com/geerlingguy/logstash-forwarder/

# Installing logstash
#
# Add Logstash APT repository
# - name: Adding logstash APT repository
#   apt_repository:
#     repo: deb http://packages.elastic.co/log... stable main
#     state: present
# Installing Logstash
- name: Update repositories cache and install Logstash
  apt:
    name: logstash
    # update_cache: yes
# Creating certs directories for SSL
- name: Creates SSL directories
  file:
    path: /etc/pki/tls/certs
    state: directory
# Creating private directories for SSL
- name: Creates SSL directories
  file:
    path: /etc/pki/tls/private
    state: directory
# Update SSL to restrict outside access
# - name: Updating the config file to restrict outside access
#   lineinfile:
#     destfile: /etc/ssl/openssl.cnf
#     regexp: 'subjectAltName ='
#     line: 'subjectAltName = IP: {{ elk_ip }}'
# Generate SSL certificates for Logstash
- name: Generate SSL certificates
  shell: "openssl req -config /etc/ssl/openssl.cnf -x509 -days 3650 -batch -nodes -newkey rsa:2048 -keyout /etc/pki/tls/private/logstash-forwarder.key -out /etc/pki/tls/certs/logstash-forwarder.crt"
# Configure Beats input configuration 02-beats-input.conf
- name: Configure Beats configuration file
  template:
    src=syslog-input.conf.j2
    dest=/etc/logstash/conf.d/02-beats-input.conf
    owner=root
    group=root
    mode=0644
# Configure Logstash 10-syslog-filter.conf config file
- name: Configure Syslog Filter
  template:
    src=syslog-filter.conf.j2
    dest=/etc/logstash/conf.d/10-syslog-filter.conf
    owner=root
    group=root
    mode=0644
# Configure Elasticsearch output file 30-elasticsearch-output.conf
- name: Configure Elasticsearch output file
  template:
    src=elasticsearch-output.conf.j2
    dest=/etc/logstash/conf.d/30-elasticsearch-output.conf
    owner=root
    group=root
    mode=0644

# Setup ES template for logstash to work with geo-point
- name: ES logstash mapping template folder
  file:
    path: /etc/logstash/templates
    state: directory
- name: Setup ES logstash mapping template
  template:
    src=logstash-elasticsearch-mapping.j2
    dest=/etc/logstash/templates/logstash-elasticsearch.json
    owner=root
    group=root
    mode=0644
- name: ES logstash template setup
  shell: 'curl -X PUT -d@/etc/logstash/templates/logstash-elasticsearch.json -H "Content-Type: application/json" http://localhost:9200/_template/logstash'


# Start Logstash service
- name: Start Logstash service
  systemd:
    name: logstash
    state: started
    daemon_reload: yes
# Read permission for syslog file
# - name: read permission syslog
#   file:
#     path=/var/log/syslog
#     group=logstash
#     mode=644
- name: logstash user to adm group
  become: yes
  become_user: root
  shell: usermod -a -G adm logstash
# Enable Logstash service
# - name: Sleep for sometime, waiting for ES to start
#   shell: sleep 10
- name: Enable Logstash service
  systemd:
    name: logstash
    enabled: yes

#https://www.digitalocean.com/community/tutorials/how-to-centralize-logs-with-rsyslog-logstash-and-elasticsearch-on-ubuntu-14-04
- name: Configure rsyslog to accept on tcp/udp ports
  lineinfile:
    dest: /etc/rsyslog.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '#module(load="imudp")', line: 'module(load="imudp")' }
    - { regexp: '#input(type="imudp" port="514")', line: 'input(type="imudp" port="514")' }
    - { regexp: '#module(load="imtcp")', line: 'module(load="imtcp")' }
    - { regexp: '#input(type="imtcp" port="514")', line: 'input(type="imtcp" port="514")' }

- name: Restart rsyslog
  service:
    name: rsyslog
    state: restarted
